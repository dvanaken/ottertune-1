dist: bionic

language: python
python:
- 3.6

services:
- docker
- mysql

addons:
  postgresql: "9.6"
  apt:
    update: true
    packages:
    - checkstyle
    - gradle
    - mysql-server
    - openjdk-11-jdk
    - python-mysqldb
    - rabbitmq-server

cache: pip

env:
  global:
  - secure: "ltV19jgR86yabcJ4Cp2P6ZOH302/dc8R9GLnoA/GC0cH8JEMaH0ODP8Lglx76PxtMHBmGWngFUfc1/9PEA21aXL6OV2BWb1ZeTdq8DPAS80B22zrqZn5T5x68K1B9ybc74eZWmPcw2ZJku1YOCu3JGqKvHrdbwbI7p8eKknilz8wy9SdSYopAoJZYQLfr4tr6wPBgKKa7qic/qouXxYM62jis5BCddgRbH93ByIUOxHKzCCVFey+f7JY2JvzWLG9DN7CDg6XexjCzmRCVNvE9I0uZN9XIW0yQy+MAnP5GQJnWKeV9y19JzaTOHD8FDu/7HJymKcqEQ6XMXrVb5W8Wa0EjRvnSl7bVA3jmH0bpDEmQHeN0JVEK/RM94xdIAxzled6+aRQm6Vc9IUCpfZ3jpwiQvUnT1cKpMokciSiJLEaH9AqGYF2o4BTDlgqqEGX7dqUPGyV3aXUa94Bv3vuLyuBfA9pcT7yD1oj0u9cVrWm15CmNStiYQ1vX6cv16xeZyiwH2QDO38jt+Gtgd47ke26nHeUsFE5i5J6kuwPaRQvlxhXCmSkSdUYjNquP7MMUN4L0aGQIqTpLOHp9WwAeqK2FYyLTT+fSC+JC1clNkEx1XtlsPwKsE3DQPSmEbOGlNGo/hh6BXc5J+1fmXEIbhBMsswueLvJAOt9OBsO3eA="
  - secure: "Q9dMFfJe6t0ZrILE+pz8NE+GqF6GvfSzYNatEPp3dhL8WhjJXNt96ByJeUvwtsztzidd1+ANOWLDN7SJEFEQWRKX/GjQxM3DAJdyHqtSoGV2btei96CWN27Ghs+8ouYJk+yjVZGRWsJylpWcYzFC5NchyHraSArN6hFC26lN0RRR5WTXWS304ptav/fU7wbiAfX8hRKKfcZ4aRRw9NHi+1sQ1QHyohS3hOi3sTa/1CtMYYxVjwpANCmMfHUF4sVIP9YcSgfEBao3cw0aHPKIU9faGZXNTpiRiz2BZBN6r7epY6wUOt1aalvRIndAw2oDLhty3Z81H+9klBUK8s1Qu7bpiI87wa2jRCotcBy9x1V7UdT+mGTt/RTwNDZPRjSmCe5ANDbpVOLfY69QmUthOVWTIin304Ft3Bd5WHOFkAK9jc0a1W72IcQRMexyny3LOYhoVEKsq7jpv7oFXbl3mEgSqpTUa8bKHlW5sal5I8uKt63GN4PlIqfbII0MBZMSo3dLKYXFoxigvn6VkwMOztq8+djFzxjmakOOEUs92g6DAQpBR6W+6EPMdjVG+Cz2Lq72DErzhGb9Y1njcL8m67ZNMgrGX4zbchSZvu9x5pvGzOneY6xVNlNfnP2i1njWNaBgTPhOIIAnOOPnl5HplmSqvzAIan7AYUkRKRYspy8="
  - secure: "XqQXHyoxO1AuJdV+A6FbpCtGQTGpEcW5QmUmo59HdBWqKwYi7aAjdVtM7XHy1hOOO/7ynVVIWqz4M7YryZVov9ny34NcFR/nQQFAaBgN3KdDBiDr3fUc4bDe6kMyWE49kNC3PzPEgO7jqR8pic2gU2EExx2UgiZPXkvVEGuhgLd5M7MOKgqpwgx4Rk62fykY6vbJbPkUJhgJxSXaGTcb/F1BFBGXDZS/hjiXyhGbrTh05qGlY2VOuVFzu8fx9AKiUcWdKz8EmpLFu2uyS0lKe+jdbl8AXHVJHGCD15kRTCgyvF+0qCc+Y8kH2qR9s9CcR1af3hT2ep5T7Fm0XromurQPRCKikCgAQto9QhlHcmAZY2RcV/C/FhGbYcpOT++rV66ApLfGlM6Z1aXSqubT2wY/9JFdvg9cSJtPBaxnEMPQmsnDzED+u1+6ENBRLKnRDEVGd3K2WE3GYuavBQAKHTaIgJ6Jj349Z9/hqH4yqEX/RqkX8iLOjf03OUDDQ+n2h2HQz5KT0R38nD3EUqW6PiuJLmp6FCxHmUwS51NVuW2N3SridtpOy11HC2rXLsS9QWyMg9IVVFakmY9aOmOvZSqeLx3SHRziwagRJ/rAeqzepPtQ90aZrUTPcwDy8F31UAb+IN/7BVXM3ny21KJmRW8EKtAvLKXtiUXnR++ZBgE="
  - secure: "oh/aW/oVb5Pe3K4JbRN8iFi5G8zKO97PDaPwcZ/5ppftSPYAYQ0muYg5B2ZsaGNnQ0kR24vrNf3oMFUVEOraJpz+nGV25p4sKlLotCtyd1lvBzHJgmXbLfWLrSpuUFwcp3vkpesYxnYj5EBGbzqkV6S/FrHrgoUzIm8D6BndBe7+IqunZIIRUJ/ZhfKDYaznyEClZGTvv1/w0bfzK9pqUazH4int0BfDxtOvFSpON+Wov8HoqX5k8ZThIkWe973gMlcfIg89HcjD33DDCljBHbaBztketoj2TuVVJlRa1e+n++1ypxkgenE4Eih99ExxZlnMIT5nJjq9VjW5nUiYJwYw2G+al/SMkQKwRqYgiecah7igXnCxuYUIKF4CuUhfXLnSi6jmIT7uRm+eJVmEkjMZE/u7sdi2oBTCZnpE2rBDzXvF8QhyocRxSQOXb/2GbSxVqZ7D4F06nSZGjuodfzCIedf52jiV77oI3Sbb15/WUZUlLUiJmkbmz5XBWbDUlzzCkGb9CPnsCjrTBIfmlcvQ0kW3FGABllrsk2olJbHFQWNceXjFlSGFefPsmjKGLtOp7J8mvw2YTEGnR46V2dq5E6Mj74TelaCscAw8k8MFroVYPEszunudSW/jjZ2fkMxKefspCy532Lt7kxkFXFzvrgKtB0/2O7ekAKnXyh0="
  - secure: "fdUymQLsU/ZR5itAKjrgV+KFM/r1DYSyHf0zYsj//YxxVoI1Zn2oYlpoDXxeUoYGGSOSeggIB2T68uV2tBgWSv8FAUX/js8Ay58JUG38DuIftUyALpmttDxKKjvtomHtlLl+R+CCUZpIf4Cu5TmlYUdQiuEOfSbbD2mnE5LOiwFtkm6NfKkxEDOj1AlvhYpZkidO7O5r0KPxIgAIE+b1/TERnfZiwNZ/gohWOFqW09gTLMTKQDUaUtguCK2vcb/1h/O5Avzt675zpTb7UwWei6S/XcnAXWhdjKDBxXcfBmXTt/Ps8lDiiiKrcilSblwp0ls8Zka0Yc7gDpyyTjgy+rHKh+wVxg0G8p5sSYNYTe7IMpJgCTeDQVz5xyrrSOQqk8GnqMEx8+yAI3EOJHFii90NFrHI8SbRYdcamdMcVpV86lqrv4skf7ib/cp4gESGfXGA+a9bGle9VEw+2rQsMAapi+V0SDZT1zVXyH1I0hrD80JaASYAbBjlp+AiPvrOess+cSS9QMIdN7HsYNOsEONy29zkdLgisS11AMI6iHR1N6+imkjPGShz5dlPiDRZlIMp8W6BBe4fysUXOY568VUMFTgUaGfgisorns3FzTgSSA/3z8q4T4B2pi1LxEWjXbd1PDP3XNrHQBS7u+9uYKQEwXfuaGu+SeFyvKWesjk="
  - secure: "n5JkGmQ/G1yMdkpU2jO4r+QSvXyqgBhl2lOOUBpEBSK8v9d1FaLnHVTAdjCJ2X02VxlgicrcTX3Tahcmh6bgyKPEurnB5yGRHHLEB8rSka2WCDpm0rcNyFKTFyywMiNGGQ804xiKILT/YDkRXAAhMvuxb+JgE+i+YuicJnF3VTVlvXpTCEJufJWhFKfBCbvjkl3z2l879zqlLMl1x5VG7qIjno+h9iL310dOhJP58nprWx9RnkTy5mxyPGD2X0sTAuPKrDxSCwjStKwn0depBgVRyTy+5b+jb7+1XUDLL5x80QnG+s926uoQH8VzOR09eX6jyThs7VQarovGaQR9aJVhowd8CVu/LhmnBW8QBo//dDHcQrFiswSD+tBojXPK9PMi1y77VEJniNNs621fWP483qsCnMXUg+M+O/h1e3I2ASvYtEQ/MyNtaugClvaMb2dUtMmrxpxWEPythUTftiHdjJlEwRdpD9RgfgYn+49SYfgz/f0QPCYXegxoDe2w6hpAS+gmRyJL+eqzI9adYQMCFU+b8MW31YJAs2G+erQ5Hy6eK4LNplhQ+YvPhsv33fEmUMhBFPPhaCZKjOzOvhi6k4G8N8kPOXu/d5G4dwtfoZlU4CZ9bs1e4QxudMDRFOYIvZML4eVSN8C2SvJIQtdjphGLVIk/SJvkzTs2sjM="
  - DB_NAME=ottertune
  - ADMIN_PASSWORD=changeme
  - ROOT=$TRAVIS_BUILD_DIR
  - WEB=$ROOT/server/website
  - CONTROLLER=$ROOT/client/controller
  - DRIVER=$ROOT/client/driver

jobs:
  include:
    - name: docker postgresql
      env:
        - BUILD=docker
        - BACKEND=postgresql
        - TEST_SUITE=docker
        - WEB_ENTRYPOINT="''"
      addons: {}
      install: true
      before_deploy:
      - /$ROOT/.travis/before_deploy.sh
      deploy:
        provider: script
        script: /$ROOT/.travis/deploy.sh
        on:
          #repo: cmu-db/ottertune
          #branch: master
          repo: dvanaken/ottertune-fork
          branch: travis-trigger-build
      after_deploy:
      - curl -LO --retry 3 https://raw.github.com/mernst/plume-lib/master/bin/trigger-travis.sh
      - sh trigger-travis.sh --pro --branch master "$TRIGGER_USER" "$TRIGGER_REPO" "$TRIGGER_TOKEN" > /dev/null 2>&1

    - name: docker mysql
      env:
        - BUILD=docker
        - BACKEND=mysql
        - TEST_SUITE=docker
        - WEB_ENTRYPOINT="''"
      addons: {}
      install: true

    - name: Unit Tests (PostgreSQL v9.6)
      env:
        - BUILD=travis
        - BACKEND=postgresql
        - TEST_SUITE=unit
        - CODECOV=true

    - name: Unit Tests (MySQL v5.7)
      env:
        - BUILD=travis
        - BACKEND=mysql
        - TEST_SUITE=unit

    - name: Integration Tests (PostgreSQL v9.6)
      env:
        - BUILD=travis
        - BACKEND=postgresql
        - TEST_SUITE=integration

    - name: Integration Tests (MySQL v5.7)
      env:
        - BUILD=travis
        - BACKEND=mysql
        - TEST_SUITE=integration

    - name: Linter
      env:
        - BUILD=travis
        - TEST_SUITE=lint


before_install:
- |
  if [ "$BUILD" = "docker" ]; then
    docker --version
    docker-compose --version
    sudo service mysql stop || true
    sudo service postgresql stop || true
  else
    if [ "$BACKEND" = "mysql" ]; then mysql -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME}"; fi
    if [ "$BACKEND" = "postgresql" ]; then psql -U postgres -c "CREATE DATABASE ${DB_NAME}"; fi
    if [ "$TEST_SUITE" = "lint" ]; then env | sort; fi
  fi

install:
- if [ "$CODECOV" = true ]; then echo codecov >> $WEB/requirements.txt; fi
- pip install -r $WEB/requirements.txt

before_script:
- |
  set -ex
  case "$TEST_CASE" in
    unit)
      ${ROOT}/.travis/init_website.sh
      ;;
    integration)
      sed -i 's/^RUN_EVERY =.*$/RUN_EVERY = 180/' $WEB/website/settings/constants.py
      ${ROOT}/.travis/init_website.sh
      ;;
    docker)
      ${ROOT}/.travis/build_docker.sh
      cd $ROOT/docker && ./create-docker-compose.sh -f docker-compose.yml
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$TEST_CASE" in
    unit)
      cd $ROOT/server && coverage run --omit="*/tests/*" -m unittest discover -s analysis/tests -v
      cd $WEB && coverage run manage.py test --noinput -v 2
      cd $CONTROLLER && gradle build
      ;;
    integration)
      cd $WEB && python manage.py runserver &
      sleep 10 && cd $DRIVER && fab integration_tests
      ;;
    lint)
      cd $ROOT && git reset --soft ${TRAVIS_COMMIT_RANGE%...*} && git status && git log | head -n 1 && git lint
      ;;
    docker)
      docker-compose run --workdir="/app/controller" --no-deps --rm driver gradle build
      docker-compose run --entrypoint "./start-test.sh" --rm web
      ;;
  esac
  set +ex

after_success:
- |
  if [ "$CODECOV" = true ]; then
    cd "${ROOT}/server" && ${ROOT}/.travis/upload_coverage.sh analysis
    cd "${WEB}" && ${ROOT}/.travis/upload_coverage.sh website
  fi

after_script:
- if [ "$BUILD" = "docker" ]; then docker logout > /dev/null 2>&1; fi
